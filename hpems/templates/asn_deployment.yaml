apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hpeasn.fullname" . }}
  labels:
    {{- include "hpeasn.labels" . | nindent 4 }}
  annotations:
    {{- include "hpems.ann" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hpeasn.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        buildteam: {{ .auth }}
        buildversion: {{ .version }}
      {{- end }}
      labels:
        {{- include "hpeasn.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hpestock.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.asn.containername }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}/{{ .Values.image.environment }}/{{ .Values.asnimage.modulename }}:{{ .Values.asnimage.moduleversion | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
          volumeMounts:
           - name: {{ .Values.asn.asnvolume }}
             mountPath: {{ .Values.mount.path }}
          envFrom:
          - configMapRef:
              name: {{ .Values.prod.config }}
      volumes:
       - name: {{ .Values.asn.asnvolume }}
         persistentVolumeClaim:
           claimName: pvc-nfs-pv1
      imagePullSecrets:
       - name: regcred1
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
